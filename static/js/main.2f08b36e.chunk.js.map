{"version":3,"sources":["api/authentication/authHelper.js","api/authentication/authAPI.js","api/scoring/scoringAPI.js","components/scoring/Individualscore.js","components/authentication/login.js","components/authentication/signup.js","components/authentication/logout.js","components/authentication/unprotected.js","components/protected.js","components/Navbar/NavbarElements.js","components/Navbar/index.js","components/scoring/Highscore.js","components/challenges/challenge1.js","components/challenges/challenges.js","components/scoring/Register.js","context.js","App.js","reportWebVitals.js","index.js"],"names":["isTokenExpired","token","decode","exp","Date","now","e","getAccessToken","data","localStorage","getItem","getRefreshToken","console","log","createUser","newUser","a","fetch","headers","method","body","JSON","stringify","response","loginUser","userCred","logout","dataAccess","dataRefresh","refresh","refreshToken","status","json","setItem","access","prot","then","to","text","unprotected","high_score","ind_score","scoreFlag","newFlag","register","user","checkChallenge","name","Individualscore","props","useState","tableData","setTableData","useEffect","className","Login","username","setUsername","password","setPassword","redirect","setRedirect","errorMessage","setErrorMessage","handleChange","target","value","onSubmit","preventDefault","error","detail","setIsAuth","setScore","type","onChange","style","width","height","color","fontWeight","Signup","email","setEmail","arr","map","item","Logout","handleLogout","removeItem","Unprotected","unprotected_value","setUnprotected_value","Prote","prote","setProte","Nav","styled","nav","NavLink","Link","Bars","FaBars","NavMenu","div","NavBtn","NavBtnLink","NavDisplay","NavLogin","Navbar","isAuth","activeStyle","score","Highscore","Table","variant","margin","striped","borderd","hover","size","points","Challenge1","flag","setFlag","solved","setSolved","history","useHistory","hidden","Button","onClick","push","Challenges","marginTop","Row","Col","xs","md","Card","Body","Title","Text","Register","flags","AppContext","createContext","App","Provider","exact","path","component","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.2f08b36e.chunk.js","sourcesContent":["import decode from \"jwt-decode\";\n\nexport const isTokenExpired = (token) => {\n    try {\n        const decoded = decode(token);\n        //console.log(\"Debug: \", decoded.exp)\n        //console.log(\"Debug: \", (Date.now() / 1000) )\n        if (decoded.exp > Date.now() / 1000) {\n            return true;\n        } else return false;\n    } catch(e) {\n        return false;\n    }\n}\n\nexport const getAccessToken = () => {\n    let data = localStorage.getItem('access_token')\n    if (data === null) {\n        return false\n    } else {\n        return data;\n    }\n}\n\nexport const getRefreshToken = () => {\n    let data = ''\n    try {\n        data = localStorage.getItem('refresh_token')\n    } catch (e) {\n        console.log(e)\n        return false\n    }\n    return data;\n}","import { getAccessToken, getRefreshToken, isTokenExpired } from \"./authHelper\";\nimport { Redirect } from 'react-router';\n\nexport const createUser = async (newUser) => {\n  //const response = await fetch('http://127.0.0.1:8000/api/user/create/', {\n  const response = await fetch('https://boiling-thicket-74024.herokuapp.com/api/user/create/', {\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    method: 'POST',\n    body: JSON.stringify(newUser)\n  })\n  return response\n};\n\nexport const loginUser = async (userCred) => {\n    //const response = await fetch('http://127.0.0.1:8000/api/token/obtain/', {\n    const response = await fetch('https://boiling-thicket-74024.herokuapp.com/api/token/obtain/', {\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    method: 'POST',\n    body: JSON.stringify(userCred)\n    })\n    return response\n}\n\nexport const logout = async () => {\n    let dataAccess = getAccessToken();\n    let dataRefresh = getRefreshToken();\n\n    if (dataAccess === false || dataRefresh === false) {\n        return false;\n    }\n\n    console.log(dataRefresh)\n    //const response = await fetch('http://127.0.0.1:8000/api/blacklist/', {\n    const response = await fetch('https://boiling-thicket-74024.herokuapp.com/api/blacklist/', {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': \"JWT \" + dataAccess,\n    },\n    method: 'POST',\n    body: JSON.stringify({refresh: dataRefresh})\n\n  })\n  return response\n};\n\nexport const refreshToken = async () => {\n    console.log(\"RefreshToken\")\n    let dataAccess = getAccessToken();\n    let dataRefresh = getRefreshToken();\n\n    if (dataAccess === false || dataRefresh === false) {\n        return false;\n    }\n\n    //const response = await fetch('http://127.0.0.1:8000/api/token/refresh/', {\n    const response = await fetch('https://boiling-thicket-74024.herokuapp.com/api/token/refresh/', {  \n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': \"JWT \" + dataAccess,\n    },\n    method: 'POST',\n    body: JSON.stringify({refresh: dataRefresh})\n  })\n\n  if (response.status === 200) {\n    const token = await response.json()\n    localStorage.setItem('access_token', token.access)\n    localStorage.setItem('refresh_token', token.refresh)\n  }\n  return response.data\n};\n\nexport const prot = async () => {\n    let dataAccess = getAccessToken();\n    //console.log(\"Debug prot: \",dataAccess)\n    if (dataAccess === false) {\n        return false;\n    } \n\n    if (!isTokenExpired(dataAccess)) {\n        refreshToken().then((response) => {\n            if(response === false) {\n                return <Redirect to=\"/\" />\n            } else {\n                dataAccess = getAccessToken();\n            }\n        })\n    }\n\n    //const response = await fetch('http://127.0.0.1:8000/api/hello/', {\n    const response = await fetch('https://boiling-thicket-74024.herokuapp.com/api/hello/', {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': \"JWT \" + dataAccess,\n    },\n    method: 'GET'\n  })\n  return response.text()\n};\n\nexport const unprotected = async () => {\n\n    //const response = await fetch('http://127.0.0.1:8000/api/unprotected/', {\n    const response = await fetch('https://boiling-thicket-74024.herokuapp.com/api/unprotected/', {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    method: 'GET'\n  })\n  return response.text()\n};\n\n","import { getAccessToken, isTokenExpired } from \"../authentication/authHelper\";\nimport { Redirect } from 'react-router';\nimport { refreshToken } from \"../authentication/authAPI\";\n\nexport const high_score = async () => {\n    let dataAccess = getAccessToken();\n    //console.log(\"Debug prot: \",dataAccess)\n    if (dataAccess === false) {\n        return false;\n    } \n\n    if (!isTokenExpired(dataAccess)) {\n        refreshToken().then((response) => {\n            if(response === false) {\n                return <Redirect to=\"/\" />\n            } else {\n                dataAccess = getAccessToken();\n            }\n        })\n    }\n\n    //console.log(\"Debug insdie Highscore in scoringAPI/Highscore\")\n\n    //const response = await fetch(('http://127.0.0.1:8000/scoring/highscore') , {\n    const response = await fetch(('https://boiling-thicket-74024.herokuapp.com/scoring/highscore') , {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': \"JWT \" + dataAccess,\n    },\n    method: 'GET'\n  })\n  return response\n};\n\nexport const ind_score = async () => {\n    let dataAccess = getAccessToken();\n    //console.log(\"Debug prot: \",dataAccess)\n    if (dataAccess === false) {\n        return false;\n    } \n\n    if (!isTokenExpired(dataAccess)) {\n        refreshToken().then((response) => {\n            if(response === false) {\n                return <Redirect to=\"/\" />\n            } else {\n                dataAccess = getAccessToken();\n            }\n        })\n    }\n\n    //console.log(\"Debug insdie Highscore in scoringAPI/Highscore\")\n\n    //const response = await fetch(('http://127.0.0.1:8000/scoring/ind_score/') , {\n    const response = await fetch(('https://boiling-thicket-74024.herokuapp.com/scoring/ind_score') , {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': \"JWT \" + dataAccess,\n    },\n    method: 'GET'\n  })\n  return response\n};\n\nexport const scoreFlag = async (newFlag) => {\n\n    let dataAccess = getAccessToken();\n    //console.log(\"Debug prot: \",dataAccess)\n    if (dataAccess === false) {\n        return false;\n    } \n\n    if (!isTokenExpired(dataAccess)) {\n        refreshToken().then((response) => {\n            if(response === false) {\n                return <Redirect to=\"/\" />\n            } else {\n                dataAccess = getAccessToken();\n            }\n        })\n    }\n\n    //const response = await fetch('http://127.0.0.1:8000/scoring/score_flag/', {\n    const response = await fetch('https://boiling-thicket-74024.herokuapp.com/scoring/score_flag/', {\n        headers: {\n        'Content-Type': 'application/json',\n        'Authorization': \"JWT \" + dataAccess,\n        },\n        method: 'POST',\n        body: JSON.stringify(newFlag)\n    })\n    // const body = await response.json()\n    // console.log(\"DEBUG API: \", JSON.stringify(body))\n    return response.text()\n};\n\nexport const register = async (user) => {\n\n    let dataAccess = getAccessToken();\n    if (dataAccess === false) {\n        return false;\n    } \n\n    if (!isTokenExpired(dataAccess)) {\n        refreshToken().then((response) => {\n            if(response === false) {\n                return <Redirect to=\"/login\" />\n            } else {\n                dataAccess = getAccessToken();\n            }\n        })\n    }\n\n    //const response = await fetch('http://127.0.0.1:8000/scoring/', {\n    const response = await fetch('https://boiling-thicket-74024.herokuapp.com/scoring/', {\n        headers: {\n        'Content-Type': 'application/json',\n        'Authorization': \"JWT \" + dataAccess,\n        },\n        method: 'POST',\n        body: JSON.stringify(user)\n    })\n    return response\n};\n\nexport const checkChallenge = async (name) => {\n    let dataAccess = getAccessToken();\n    //console.log(\"Debug prot: \",dataAccess)\n    if (dataAccess === false) {\n        return false;\n    } \n\n    if (!isTokenExpired(dataAccess)) {\n        refreshToken().then((response) => {\n            if(response === false) {\n                return <Redirect to=\"/\" />\n            } else {\n                dataAccess = getAccessToken();\n            }\n        })\n    }\n\n    //console.log(\"Debug insdie Highscore in scoringAPI/Highscore\")\n\n    //const response = await fetch(('http://127.0.0.1:8000/scoring/verify/'+name) , {\n    const response = await fetch(('https://boiling-thicket-74024.herokuapp.com/scoring/verify/'+name) , {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': \"JWT \" + dataAccess,\n    },\n    method: 'GET'\n  })\n  return response\n};","import { useState, useEffect } from \"react\";\nimport { ind_score } from \"../../api/scoring/scoringAPI\";\n\nconst Individualscore = (props) => {\n    const [tableData, setTableData] = useState([]);\n\n    useEffect( () =>{\n        ind_score().then( async (response) => {\n            const body = await response.json()\n            setTableData(body)\n        })\n    }, [])\n    console.log(tableData)\n    return(\n        <div className=\"container\">\n            {tableData}\n        </div>\n    )\n}\nexport default Individualscore;\n\n","import { useState } from \"react\";\nimport { loginUser } from '../../api/authentication/authAPI';\nimport { Redirect } from 'react-router';\nimport Individualscore from \"../scoring/Individualscore\";\n\nconst Login = (props) => {\n    const [username, setUsername] = useState('') // username to create credentials\n    const [password, setPassword] = useState('') // password to create credentials\n    const [redirect, setRedirect] = useState(false) // handler to redirect if authenticated\n    const [errorMessage, setErrorMessage] = useState('') // handler for error message\n    \n    // store credentials into state\n    const handleChange = (e) => {\n        if (e.target.name === 'username') {\n            setUsername(e.target.value)\n        } else if (e.target.name === 'password') {\n            setPassword(e.target.value)\n        }\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault(); // stop default actions from happening on submit\n        // build user cred object to pass to authAPI components\n        const userCred = {\n            username: username,\n            password: password,\n        }\n        //console.log(userCred)\n        // pass userCreds into loginUser\n        loginUser(userCred)\n            .then( async (response) => { \n                // Create error message\n                if (response.status !== 200) {\n                    let error = await response.json()\n                    setErrorMessage(error.detail)\n                } else {\n                    // Set localStorage with tokens and isAuth/Redirect\n                    let token = await response.json()\n                    console.log(\"Token: \",token);\n                    localStorage.setItem('access_token', token.access);\n                    localStorage.setItem('refresh_token', token.refresh);\n                    props.setIsAuth(true);\n                    props.setScore(<Individualscore/>)\n                    setRedirect(true);\n                }})\n    }\n\n    if (redirect) {\n        return <Redirect to = \"/challenges\"/> // move here if redirected\n    }\n\n    return(\n        <div>\n            <form onSubmit={handleSubmit}>\n                <label>\n                    Username: &nbsp;\n                    <input name=\"username\" type=\"text\" value={username} onChange={handleChange} style={{width: \"120px\", height: \"30px\" }}/>\n                    &nbsp;\n                </label>\n                <label>\n                    Password: &nbsp;\n                    <input name=\"password\" type=\"password\" value={password} onChange={handleChange} style={{width: \"120px\", height: \"30px\" }}/>\n                    &nbsp;\n                </label>\n                <input type=\"submit\" value=\"Login\"/>\n                { errorMessage && <p className=\"error\" style={{color: '#000000', fontWeight: 'Bold', }}> {errorMessage} </p>}\n            </form>\n        </div>\n    )\n}\nexport default Login;","import { useState } from \"react\";\nimport { createUser } from \"../../api/authentication/authAPI\";\nimport { Redirect } from 'react-router'\n\nconst Signup = () => {\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n    const [email, setEmail] = useState('')\n    const [redirect, setRedirect] = useState(false)\n    const [errorMessage, setErrorMessage] = useState([]) // handler for error message\n\n    // Functions to reset the errorMessages back to none\n    const clearState = () => {\n        setErrorMessage([])\n    }\n    \n    const handleChange = (e) => {\n        if (e.target.name === 'username') {\n            setUsername(e.target.value)\n        } else if (e.target.name === 'password') {\n            setPassword(e.target.value)\n        } else if (e.target.name === 'email') {\n            setEmail(e.target.value)\n        }\n    }\n\n    const handleSubmit = (e) => {\n        clearState(); // clears the current error messages if they exist\n        e.preventDefault();\n        const newUser = {\n            username: username,\n            password: password,\n            email: email\n        }\n        createUser(newUser)\n            .then( async (response) => { \n                if (response.status > 201) {\n                    let error = await response.json()\n                    if (error.username) {\n                        //console.log(\"username: \",error.username[0])\n                        setErrorMessage( arr => [...arr, \"Username Error: \" + error.username[0]])\n                    }\n                    if (error.email) {\n                        //console.log(\"email: \", error.email[0])\n                        setErrorMessage( arr => [...arr, \"Email Error: \" + error.email[0]])\n                    }\n                    if (error.password) {\n                        //console.log(\"password: \", error.password[0])\n                        setErrorMessage( arr => [...arr, \"Password Error: \" + error.password[0]])\n                    }\n                    // console.log(\"All Error: \", errorMessage)\n                } else {\n                    setRedirect(true)\n                }})\n    }\n    \n    if (redirect) {\n        return <Redirect to = \"/\"/>\n    }\n\n    return(\n        <div>Signup\n            <form onSubmit={handleSubmit}>\n                <label>\n                    Username:\n                    <input name=\"username\" type=\"text\" value={username} onChange={handleChange}/>\n                </label>\n                <label>\n                    Password:\n                    <input name=\"password\" type=\"password\" value={password} onChange={handleChange}/>\n                </label>\n                <label>\n                    Email:\n                    <input name=\"email\" type=\"email\" value={email} onChange={handleChange}/>\n                </label>\n                <input type=\"submit\" value=\"Submit\"/>\n                { errorMessage && <ul className=\"error\"> {errorMessage.map((item) => (<li>{item}</li>))} </ul>}\n            </form>\n        </div>\n    )\n}\nexport default Signup","import { logout } from '../../api/authentication/authAPI';\nimport { Redirect } from 'react-router';\n\nconst Logout = (props) => {\n\n    const handleLogout = async () => {\n        try {\n            logout().then((response) => { localStorage.removeItem('access_token'); localStorage.removeItem('refresh_token')})\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    if (localStorage.getItem('access_token') === null) {\n        return(\n            <div>\n                <h2> Something went wrong!!! Maybe you are not logged in!!! </h2>\n            </div>\n        )\n    } else {\n        handleLogout()\n        props.setIsAuth(false)\n        return <Redirect to = \"/\"/>\n    }\n}\n\nexport default Logout;","import { unprotected } from \"../../api/authentication/authAPI\";\nimport { useState, useEffect } from \"react\";\n\nconst Unprotected = () => {\n    const [unprotected_value, setUnprotected_value] = useState('')\n\n    useEffect( () => {\n        unprotected().then( async (response) => {\n            setUnprotected_value(response) }\n        )\n    }, [])\n\n    return(\n        <div>\n            <p>Weclome to the Worst CTF</p>\n            <p>The test pull of unportected data: {unprotected_value}</p>\n        </div>\n    )\n}\nexport default Unprotected","import { useState, useEffect } from \"react\";\nimport{ prot } from '../api/authentication/authAPI';\nimport { Redirect } from 'react-router';\n\nconst Prote = (props) => {\n\n    const [prote, setProte] = useState();\n\n    useEffect( () => {\n        prot().then((response) => {\n            if(response === false) {\n            //console.log(\"Inside Prote false\");\n            //console.log(\"isAuth: \", props.isAuth)\n            props.setIsAuth(false);\n            //console.log(\"After set - isAuth: \", props.isAuth)\n            return <Redirect to = \"/login/\"/>\n        } else { setProte(response)} })\n    }, [])\n    \n\n    return(\n        <div>Protected\n            <p>\n                Output:\n            </p>\n            {prote}\n        </div>\n    )\n}\n\nexport default Prote;","import { FaBars } from 'react-icons/fa';\nimport { NavLink as Link } from 'react-router-dom';\nimport styled from 'styled-components';\n  \nexport const Nav = styled.nav`\n  background: #C36653;\n  height: 85px;\n  display: flex;\n  justify-content: space-between;\n  padding: 0.2rem calc((100vw - 1000px) / 2);\n  z-index: 12;\n  /* Third Nav */\n  /* justify-content: flex-start; */\n`;\n  \nexport const NavLink = styled(Link)`\n  color: #FFFFFF;\n  font-family: sans-serif;\n  display: flex;\n  align-items: center;\n  text-decoration: none;\n  padding: 0 1rem;\n  height: 100%;\n  cursor: pointer;\n  &.active {\n    color: #000000;\n    font-weight: bold;\n  }\n`;\n  \nexport const Bars = styled(FaBars)`\n  display: none;\n  color: #808080;\n  @media screen and (max-width: 768px) {\n    display: block;\n    position: absolute;\n    top: 0;\n    right: 0;\n    transform: translate(-100%, 75%);\n    font-size: 1.8rem;\n    cursor: pointer;\n  }\n`;\n  \nexport const NavMenu = styled.div`\n  display: flex;\n  align-items: center;\n  margin-right: -24px;\n  /* Second Nav */\n  /* margin-right: 24px; */\n  /* Third Nav */\n  /* width: 100vw;\n  white-space: nowrap; */\n  @media screen and (max-width: 768px) {\n    display: none;\n  }\n`;\n  \nexport const NavBtn = styled.nav`\n  display: flex;\n  align-items: center;\n  margin-right: 24px;\n  /* Third Nav */\n  /* justify-content: flex-end;\n  width: 100vw; */\n  @media screen and (max-width: 768px) {\n    display: none;\n  }\n`;\n  \nexport const NavBtnLink = styled(Link)`\n  border-radius: 4px;\n  background: #808080;\n  padding: 10px 22px;\n  color: #000000;\n  outline: none;\n  border: none;\n  cursor: pointer;\n  transition: all 0.2s ease-in-out;\n  text-decoration: none;\n  /* Second Nav */\n  margin-left: 24px;\n  &:hover {\n    transition: all 0.2s ease-in-out;\n    background: #fff;\n    color: #808080;\n  }\n`;\n\nexport const NavDisplay = styled.nav`\n  color: #000000;\n  font-family: sans-serif;\n  font-weight: bold;\n  display: flex;\n  align-items: center;\n  margin-right: 20px;\n  }\n`;\n\nexport const NavLogin = styled.nav`\n  color: #FFFFFF;\n  font-family: sans-serif;\n  display: flex;\n  align-items: center;\n  text-decoration: none;\n  padding: 0 1rem;\n  height: 100%;\n  cursor: pointer;\n  }\n`;","import React from 'react';\nimport Login from '../authentication/login';\nimport { \n  Nav,\n  NavLink,\n  Bars,\n  NavMenu,\n  NavBtn,\n  NavBtnLink,\n  NavDisplay,\n  NavLogin,\n} from './NavbarElements';\n  \nconst Navbar = (props) => {\n    return (\n        <>\n        <Nav>\n            <Bars />\n            <NavMenu>\n                {/* <NavLink to='/unprotected' activeStyle> Unprotected </NavLink> */}\n                {(!props.isAuth) && (<NavLink to='/signup' activeStyle> Signup </NavLink>)}\n                {/* {(props.isAuth) && (<NavLink to='/protected' activeStyle>Protected View inside Auth </NavLink>)} */}\n                {(props.isAuth) && (<NavLink to='/highscore' activeStyle>High Score </NavLink>)}\n                {/* {(props.isAuth) && (<NavLink to='/ind_score' activeStyle>Individual Score </NavLink>)} */}\n                {(props.isAuth) && (<NavLink to='/challenges' activeStyle>Challenges </NavLink>)}\n                {(props.isAuth) && (<NavLink to='/register' activeStyle>Register Challenge </NavLink>)}\n                {/* Second Nav */}\n                {/* <NavBtnLink to='/sign-in'>Sign In</NavBtnLink> */}\n                \n            </NavMenu>\n            <NavMenu>\n                <NavBtn>\n                    {(props.isAuth) && (<NavDisplay>Score: {props.score}</NavDisplay>)}\n                    {/* {(props.isAuth) ? (<NavBtnLink to='/logout'>Logout</NavBtnLink>) : (<NavBtnLink to='/login'>Login</NavBtnLink>)} */}\n                    {(props.isAuth) ? (<NavBtnLink to='/logout'>Logout</NavBtnLink>) : (<NavLogin><Login setScore={props.setScore} setIsAuth={props.setIsAuth}/></NavLogin>)}\n                </NavBtn>\n            </NavMenu>\n        </Nav>\n        </>\n  );\n};\n  \nexport default Navbar;","import { useState, useEffect } from \"react\";\nimport { high_score } from \"../../api/scoring/scoringAPI\";\nimport { Table } from \"react-bootstrap\";\n\nconst Highscore = () => {\n    const [tableData, setTableData] = useState([]);\n\n    useEffect( () =>{\n        high_score().then( async (response) => {\n            const body = await response.json()\n            setTableData(body)\n        })\n    }, [])\n\n    return(\n        <div className=\"container\">\n            <Table variant=\"default\" style={{ width: \"50%\", margin: \"20px auto\"}} striped borderd hover size=\"sm\" variant=\"light\">\n                <thead>\n                    <tr>\n                        <th>Username</th>\n                        <th>Points</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {tableData.map(\n                        ({ username, points }) => {\n                            return (\n                                <tr>\n                                    <td>{username}</td>\n                                    <td>{points}</td>\n                                </tr>\n                            )\n                        } )}\n                </tbody>\n            </Table>\n        </div>\n    )\n}\nexport default Highscore;","import { useEffect, useState } from \"react\";\nimport { scoreFlag } from \"../../api/scoring/scoringAPI\";\nimport { checkChallenge } from \"../../api/scoring/scoringAPI\";\nimport { Button} from \"react-bootstrap\";\nimport { useHistory } from 'react-router-dom';\n\nconst Challenge1 = () => {\n\n    const [flag, setFlag] = useState('')\n    const [errorMessage, setErrorMessage] = useState([])\n    const [solved, setSolved] = useState(false)\n\n    const history = useHistory();\n\n    const clearState = () => {\n        setErrorMessage([])\n    }\n    \n    const handleChange = (e) => {\n        if (e.target.name === 'flag') {\n            setFlag(e.target.value)\n        }\n    }\n\n    useEffect( () => {\n        checkChallenge('WebApp1').then( async (response) => {\n            if (response.status > 201) {\n                setSolved(false)\n                }\n            else { setSolved(true) }\n        })\n    }, [])\n\n    const handleSubmit = (e) => {\n        clearState(); \n        e.preventDefault();\n        const newFlag = {\n            name: \"WebApp1\",\n            flag: flag,\n        }\n        scoreFlag(newFlag)\n            .then( async (response) => { \n                console.log(\"insdie scoreFlag\")\n                if (response.status > 201) {\n                    console.log(\"inside Response > 200 Scoring\")\n                    let error = await response.json()\n                    if (error.flag) {\n                        setErrorMessage( arr => [...arr, \"Flag Error: \" + error.flag[0]])\n                    }\n                } else { \n                    checkChallenge('WebApp1').then( async (response) => {\n                        if (response.status > 201) {\n                            setSolved(false)\n                        } \n                        else { \n                            setSolved(true)\n                        }\n                    })\n                }\n            }\n        )\n    }\n    \n    return(\n        <div>Challenge 1\n            <p hidden>FLAG: test</p>\n            <form onSubmit={handleSubmit}>\n                <label>\n                    {(solved) ? (<div>Solved!</div>) : (<p>Flag: <input name=\"flag\" type=\"text\" value={flag} onChange={handleChange}/> </p>)}       \n                </label>\n                {(solved) ? (<p><Button onClick={()=> history.push('/challenges')} variant=\"primary\">Return</Button></p>) : (<input type=\"submit\" value=\"Submit\"/>)}\n                { errorMessage && <ul className=\"error\"> {errorMessage.map((item) => (<li>{item}</li>))} </ul>}\n            </form>\n        </div>\n    )\n}\nexport default Challenge1;","import { Card, Button, Row, Col } from \"react-bootstrap\";\nimport { useHistory } from 'react-router-dom';\nimport React from 'react';\n\nimport '../../App.css';\n\nconst Challenges = (props) => { \n    const history = useHistory();\n    const handleSubmit = (e) => {\n        e.preventDefault();\n    }\n    \n    return(\n        <div className=\"container\" style={{ marginTop: '20px'}}>\n            <Row>\n                <Col xs={6} md={6}>\n                    <Card style={{ width: '18rem' }}>\n                    <Card.Body>\n                        <Card.Title>Web Application 1</Card.Title>\n                        <Card.Text>\n                        Can you find the flag?\n                        </Card.Text>\n                        <Button onClick={()=> history.push('/challenge1')} variant=\"primary\">Web App 1</Button>\n                    </Card.Body>\n                    </Card>\n                </Col>\n                <Col xs={6} md={6}>\n                    <Card style={{ width: '18rem' }}>\n                    <Card.Body>\n                        <Card.Title>Web Application 2</Card.Title>\n                        <Card.Text>\n                        Onto the next level...\n                        </Card.Text>\n                        <Button onClick={()=> history.push('/challenge1')} variant=\"primary\">Web App 2</Button>\n                    </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n        </div>\n    )\n}\nexport default Challenges;","import { useState, useEffect } from \"react\";\nimport { Redirect } from 'react-router';\nimport { register } from \"../../api/scoring/scoringAPI\";\n\nconst Register = () => {\n    const [name, setName] = useState('')\n    const [redirect, setRedirect] = useState(false)\n    const [errorMessage, setErrorMessage] = useState([]) // handler for error message\n\n    // Functions to reset the errorMessages back to none\n    const clearState = () => {\n        setErrorMessage([])\n    }\n    \n    const handleChange = (e) => {\n        if (e.target.name === 'name') {\n            setName(e.target.value)\n        }\n    }\n\n    const handleSubmit = (e) => {\n        clearState(); // clears the current error messages if they exist\n        e.preventDefault();\n        const challenge = {\n            flags:[]\n            }\n        register(challenge)\n            .then( async (response) => { \n                if (response.status > 201) {\n                    let error = await response.json()\n                    if (error.flag) {\n                        setErrorMessage( arr => [...arr, \"Flag Error: \" + error.flag[0]])\n                    }\n                    else { setRedirect(true) }\n                }})\n    }\n    \n    if (redirect) {\n        return <Redirect to = \"/\"/>\n    }\n\n    return(\n        <div>Register for Challenges\n            <form onSubmit={handleSubmit}>\n                <label>\n                    Current Challenges\n                </label>\n                <input type=\"submit\" value=\"Submit\"/>\n                { errorMessage && <ul className=\"error\"> {errorMessage.map((item) => (<li>{item}</li>))} </ul>}\n            </form>\n        </div>\n    )\n}\n\nexport default Register;","import { createContext } from 'react';\n\nexport const AppContext = createContext();","import { Route, Switch } from 'react-router-dom';\nimport Login from './components/authentication/login';\nimport Signup from './components/authentication/signup';\nimport Logout from './components/authentication/logout';\nimport Unprotected from './components/authentication/unprotected';\nimport Prote from './components/protected';\nimport Navbar from './components/Navbar';\nimport Highscore from './components/scoring/Highscore';\nimport Individualscore from './components/scoring/Individualscore';\nimport Challenge1 from './components/challenges/challenge1';\nimport Challenges from './components/challenges/challenges';\nimport Register from './components/scoring/Register';\nimport { AppContext } from './context';\nimport { useEffect, useState } from 'react';\n\nimport './App.css';\n\nfunction App() {\n\n  const [ isAuth, setIsAuth ] = useState(false);\n  const [ score, setScore ] = useState();\n\n  useEffect(() => {\n    if(localStorage.getItem('access_token')) {\n      setIsAuth(true);\n      setScore(<Individualscore/>)\n    }\n  }, [])\n\n  return (\n    <AppContext.Provider value={{  }}>\n      <div className=\"App\">\n        <Navbar setIsAuth={setIsAuth} isAuth={isAuth} score={score} setScore={setScore}/>\n        <Switch>\n          <Route exact path={'/'} component={Unprotected} />\n          <Route exact path={'/unprotected'} component={Unprotected} />\n          <Route exact path='/login' render={(props) => (<Login {...props} setIsAuth={setIsAuth} isAuth={isAuth} score={score} setScore={setScore} /> )} />\n          <Route exact path={\"/signup/\"} component={Signup}/>\n          <Route exact path='/logout' render={(props) => (<Logout {...props} setIsAuth={setIsAuth} isAuth={isAuth} /> )} />\n          <Route exact path=\"/protected\" render={(props) => (<Prote {...props} setIsAuth={setIsAuth} isAuth={isAuth} /> )} />\n          <Route exact path=\"/challenges\" render={(props) => (<Challenges {...props} setIsAuth={setIsAuth} isAuth={isAuth} /> )} />\n          <Route exact path=\"/challenge1\" render={(props) => (<Challenge1 {...props} setIsAuth={setIsAuth} isAuth={isAuth} /> )} />\n          <Route exact path=\"/register\" render={(props) => (<Register {...props} setIsAuth={setIsAuth} isAuth={isAuth} /> )} />\n          <Route exact path=\"/highscore\" render={(props) => (<Highscore {...props} setIsAuth={setIsAuth} isAuth={isAuth} /> )} />\n          <Route exact path=\"/ind_score\" render={(props) => (<Individualscore {...props} setIsAuth={setIsAuth} isAuth={isAuth} /> )} />\n        </Switch>\n      </div>\n    </AppContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom'\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}